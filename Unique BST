# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def generateTrees(self, n: int) -> List[TreeNode]:
        if n==0:
            return []
        else:
            return self.unique(1,n+1)

    def unique(self,start,end):
        if start>=end:
            return [None]
        l=[]
        for i in range(start,end):
            left_tree=self.unique(start,i)
            right_tree=self.unique(i+1,end)
            for j in range(len(left_tree)):
                left=left_tree[j]
                for k in range(len(right_tree)):
                    right=right_tree[k]
                    node=TreeNode(i)
                    node.left=left
                    node.right=right
                    l.append(node)
        return l
                
        
