class BSTIterator:
   
    def __init__(self, root: TreeNode):
        self.node=[]
        
        self.count=-1
        self.inorder(root)
        
    def inorder(self,root):
        temp=root
        if temp!=None:
            if temp.left!=None:
                self.inorder(temp.left)
            self.node.append(temp.val)
            if temp.right!=None:
                self.inorder(temp.right)
        
     
                
            
        

    def next(self) -> int:
        if len(self.node)>self.count+1:
            self.count+=1
            return self.node[self.count]
        
        
        
        

    def hasNext(self) -> bool:
        if len(self.node)>self.count+1:
            return True
        else:
            return False
        
